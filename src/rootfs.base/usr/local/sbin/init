#!/bin/bash
export USERHOME="/home/${USER}"

export LOGINUSER="${USER}"

export GROUP="${GROUP:-$LOGINUSER}"

echo "Setting up user account: ${LOGINUSER}"

groupadd \
  --gid "${UID}" \
    "${GROUP}"

useradd \
  --uid "${UID}" \
  --gid "${UID}" \
  --home-dir "${USERHOME}" \
  --shell /bin/bash \
    "${LOGINUSER}"

usermod \
  -a -G \
    adm,sys,wheel,video,audio,tty,users \
      "${LOGINUSER}"

passwd -d "${LOGINUSER}"

echo "Setting up /run/user/${UID}"
mkdir -p "/run/user/${UID}"
chmod 0700 "/run/user/${UID}"
chown "${LOGINUSER}":"${GROUP}" "/run/user/${UID}"

if [[ "${ENABLE_ROOT}" == "true" ]] ; then
  echo "Allowing passwordless sudo for ${LOGINUSER}"
  echo "${LOGINUSER} ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
fi

echo "Setting up user environment"

# First setup VNC socket directory
if [[ -z "${DISPLAY_SOCK_ADDR}" ]] ; then
  if [[ -n "${VNC_SOCK_ADDR}" ]] ; then
    export DISPLAY_SOCK_ADDR="${VNC_SOCK_ADDR}"
  else
    export DISPLAY_SOCK_ADDR="/run/user/${UID}/vnc.sock"
  fi
fi
echo "Setting up VNC socket directory at $(dirname ${DISPLAY_SOCK_ADDR})"
mkdir -pv "$(dirname ${DISPLAY_SOCK_ADDR})"
chown -Rv "${LOGINUSER}":"${GROUP}" "$(dirname ${DISPLAY_SOCK_ADDR})"

echo "Setting up pulseaudio"
mkdir -pv "${USERHOME}/.config/pulse"
echo "load-module module-native-protocol-unix auth-anonymous=1" > "${USERHOME}/.config/pulse/default.pa"

mkdir -pv /run/dbus

find /etc/default -type f -print | xargs -I{} bash -c '/usr/bin/envsubst < "$1" > "$1"' _ {}

# Append the current environment to /etc/default/kvdi
env >> /etc/default/kvdi

echo "Granting ${LOGINUSER} ownership of ${USERHOME}"
chown -R "${LOGINUSER}":"${GROUP}" "${USERHOME}"

export container=docker
exec /usr/lib/systemd/systemd
